# docker-compose.yml
version: '3'
volumes:
  database_data:
    driver: local
services:
  database:
    image: 'postgres'
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    command: ["postgres", "-c", "ssl=true", 
        "-c", "ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem", "-c", 
        "ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key"]
    volumes:
      - database_data:/var/lib/postgresql/data/
      - ./tasks/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: 'docker'
    ports: 
      - '5432:5432'
  identity:
    build:
      context: .
      dockerfile: './Dockerfile.identity'
      args:
        PORT: 3000
    environment:
      DATABASE_URL: 'postgresql://postgres:docker@database:5432/identity'
      JWT_SECRET: '7H848VE4bTRUY7EohDFGHGTq'
      PORT: 3000
    ports:
      - '3000:3000'
    depends_on:
      - database
  playlists:
    build:
      context: .
      dockerfile: './Dockerfile.playlists'
      args:
        PORT: 3010
    environment:
      DATABASE_URL: 'postgresql://postgres:docker@database:5432/playlists'
      JWT_SECRET: '7H848VE4bTRUY7EohDFGHGTq'
      PORT: 3010
      IDENTITY_SERVICE_URL: 'http://identity:3000'
    ports:
      - '3010:3010'
    depends_on:
      - database
      - identity